`contract BigStateContract {
    ;; Переменные контракта
    uint256 var1;
    uint256 var2;
    uint256 var3;
    slice addr;
    dict<uint256, cell> big_dict;

    ;; Конструктор контракта для инициализации данных
    constructor(uint256 v1, uint256 v2, uint256 v3, slice address, dict<uint256, cell> dict_data) public {
        var1 = v1;
        var2 = v2;
        var3 = v3;
        addr = address;
        big_dict = dict_data;
    }

    ;; Метод для обновления переменных
    public update_vars(uint256 new_v1, uint256 new_v2, uint256 new_v3, slice new_addr) {
        var1 = new_v1;
        var2 = new_v2;
        var3 = new_v3;
        addr = new_addr;
    }

    ;; Метод для добавления элемента в словарь
    public add_to_dict(uint256 key, cell value) {
        big_dict[key] = value;
    }

    ;; Метод для извлечения элемента из словаря
    public get_from_dict(uint256 key) impure returns (cell) {
        return big_dict[key];
    }

    ;; Метод для отправки части состояния
    public send_state(slice to) {
        ;; Формируем сообщение с частью состояния контракта
        cell body = begin_cell()
            .store_uint(var1, 256)
            .store_uint(var2, 256)
            .store_uint(var3, 256)
            .store_slice(addr)
        .end_cell();
        
        send_raw_message(body, 0);  // Отправляем сообщение
    }
}